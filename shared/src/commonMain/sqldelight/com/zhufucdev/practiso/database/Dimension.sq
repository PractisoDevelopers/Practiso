CREATE TABLE dimension(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

CREATE TABLE quizByDimension(
    quizId INTEGER NOT NULL,
    dimensionId INTEGER NOT NULL,
    intensity REAL NOT NULL DEFAULT 1 CHECK (0 < intensity <= 1),
    PRIMARY KEY (quizId, dimensionId),
    FOREIGN KEY (quizId) REFERENCES quiz(id) ON DELETE CASCADE,
    FOREIGN KEY (dimensionId) REFERENCES dimension(id) ON DELETE CASCADE
);

getAllDimensions:
SELECT *
FROM dimension;

getDimensionQuizIds:
SELECT dimension.*, quizByDimension.quizId
FROM dimension JOIN quizByDimension ON dimension.id = quizByDimension.dimensionId;

getRecentDimensions:
SELECT *
FROM dimension
ORDER BY id DESC
LIMIT ?;

getDimensionById:
SELECT *
FROM dimension
WHERE id = ?;

getDimensionsByIds:
SELECT *
FROM dimension
WHERE id IN ?;

getDimensionByName:
SELECT *
FROM dimension
WHERE name = ?;

getDimensionByQuizId:
SELECT D.*, Q.intensity
FROM dimension D JOIN quizByDimension Q ON Q.dimensionId = D.id
WHERE Q.quizId = ?;

getAllDimensionsWithQuizCount:
SELECT D.*, coalesce(count(Q.quizId), 0) AS quizCount
FROM dimension D LEFT JOIN quizByDimension Q ON Q.dimensionId = D.id
GROUP BY D.id;

getQuizIntensitiesByDimensionId:
SELECT Q.*, QD.intensity
FROM dimension D JOIN quizByDimension QD ON QD.dimensionId = D.id JOIN quiz Q ON Q.id = QD.quizId
WHERE D.id = ?;

getQuizzesByDimenionId:
SELECT Q.*
FROM quizByDimension QD JOIN quiz Q ON QD.quizId = Q.id
WHERE dimensionId = ?;

insertDimension:
INSERT INTO dimension(name)
VALUES (?);

updateDimensionName:
UPDATE dimension SET name = ? WHERE id = ?;

updateDimensionAssoicationIntensity:
UPDATE quizByDimension SET intensity = ? WHERE quizId = ? AND dimensionId = ?;

associateQuizWithDimension:
INSERT INTO quizByDimension(quizId, dimensionId, intensity)
VALUES (?, ?, ?);

dissoicateQuizFromDimension:
DELETE FROM quizByDimension WHERE quizId = ? AND dimensionId = ?;

removeDimension:
DELETE FROM dimension WHERE id = ?;

removeDimensions:
DELETE FROM dimension WHERE id IN ?;

getQuizCountByDimensions:
SELECT count(DISTINCT quizId)
FROM quizByDimension
WHERE dimensionId IN ?;